{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/Documents/Ramsoft/task-list/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [boards, setBoards] = useState([{\n    id: 1,\n    title: 'To Do',\n    cards: [{\n      id: 1,\n      text: 'Task 1'\n    }, {\n      id: 2,\n      text: 'Task 2'\n    }, {\n      id: 3,\n      text: 'Task 3'\n    }]\n  }, {\n    id: 2,\n    title: 'In Progress',\n    cards: []\n  }, {\n    id: 3,\n    title: 'Done',\n    cards: []\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trello Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boards\",\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n        board: board,\n        boards: boards,\n        setBoards: setBoards\n      }, board.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"P1gtDttUIlNjWwb67H6L/iwtWnY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Board","jsxDEV","_jsxDEV","App","_s","boards","setBoards","id","title","cards","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","board","_c","$RefreshReg$"],"sources":["/home/madhuri/Documents/Ramsoft/task-list/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Board from './Board';\n\nconst App = () => {\n  const [boards, setBoards] = useState([\n    {\n      id: 1,\n      title: 'To Do',\n      cards: [\n        { id: 1, text: 'Task 1' },\n        { id: 2, text: 'Task 2' },\n        { id: 3, text: 'Task 3' },\n      ],\n    },\n    {\n      id: 2,\n      title: 'In Progress',\n      cards: [],\n    },\n    {\n      id: 3,\n      title: 'Done',\n      cards: [],\n    },\n  ]);\n\n  return (\n    <div className=\"app\">\n      <h1>Trello Clone</h1>\n      <div className=\"boards\">\n        {boards.map((board) => (\n          <Board key={board.id} board={board} boards={boards} setBoards={setBoards} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CACnC;IACEQ,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,CACL;MAAEF,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAAS,CAAC,EACzB;MAAEH,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAAS,CAAC,EACzB;MAAEH,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAAS,CAAC;EAE7B,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,aAAa;IACpBC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EAEF,oBACEP,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MAAAU,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBd,OAAA;MAAKS,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBP,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAChBhB,OAAA,CAACF,KAAK;QAAgBkB,KAAK,EAAEA,KAAM;QAACb,MAAM,EAAEA,MAAO;QAACC,SAAS,EAAEA;MAAU,GAA7DY,KAAK,CAACX,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuD,CAC5E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAjCID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}