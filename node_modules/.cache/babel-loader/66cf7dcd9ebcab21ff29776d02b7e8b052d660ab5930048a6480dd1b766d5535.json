{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/Documents/Ramsoft/task-list/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Board from './Components/Board';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [boards, setBoards] = useState(\n    //   [\n    //   {\n    //     id: 1,\n    //     title: 'To Do',\n    //     cards: [\n    //       { id: 1, text: 'Task 1', description:'This is task 1', deadline:`It's deadline is 12 pm.` },\n    //       { id: 2, text: 'Task 2', description:'This is task 2', deadline:`It's deadline is 10 pm.`},\n    //       { id: 3, text: 'Task 3', description:'This is task 3', deadline:`It's deadline is 5 pm.` },\n    //     ],\n    //   },\n    //   {\n    //     id: 2,\n    //     title: 'In Progress',\n    //     cards: [],\n    //   },\n    //   {\n    //     id: 3,\n    //     title: 'Done',\n    //     cards: [],\n    //   },\n    // ]\n  );\n  useEffect(() => {\n    const savedBoards = JSON.parse(localStorage.getItem('boards'));\n    if (savedBoards) {\n      setBoards(savedBoards);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('boards', JSON.stringify(boards));\n    console.log('hey', boards);\n  }, [boards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trello Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boards\",\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n        board: board,\n        boards: boards,\n        setBoards: setBoards\n      }, board.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OKw/myAMnaeSa35cvm7M5D6vYto=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Board","jsxDEV","_jsxDEV","App","_s","boards","setBoards","savedBoards","JSON","parse","localStorage","getItem","setItem","stringify","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","board","id","_c","$RefreshReg$"],"sources":["/home/madhuri/Documents/Ramsoft/task-list/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Board from './Components/Board';\nimport './App.css'\n\nconst App = () => {\n  const [boards, setBoards] = useState(\n  //   [\n  //   {\n  //     id: 1,\n  //     title: 'To Do',\n  //     cards: [\n  //       { id: 1, text: 'Task 1', description:'This is task 1', deadline:`It's deadline is 12 pm.` },\n  //       { id: 2, text: 'Task 2', description:'This is task 2', deadline:`It's deadline is 10 pm.`},\n  //       { id: 3, text: 'Task 3', description:'This is task 3', deadline:`It's deadline is 5 pm.` },\n  //     ],\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'In Progress',\n  //     cards: [],\n  //   },\n  //   {\n  //     id: 3,\n  //     title: 'Done',\n  //     cards: [],\n  //   },\n  // ]\n  );\n  useEffect(() => {\n    const savedBoards = JSON.parse(localStorage.getItem('boards'));\n    if (savedBoards) {\n      setBoards(savedBoards);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('boards', JSON.stringify(boards));\n    console.log('hey', boards)\n  }, [boards]);\n\n\n  return (\n    <div className=\"app\">\n      <h1>Trello Clone</h1>\n      <div className=\"boards\">\n        {boards.map((board) => (\n          <Board key={board.id} board={board} boards={boards} setBoards={setBoards} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ;IACpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACC;EACDD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC9D,IAAIJ,WAAW,EAAE;MACfD,SAAS,CAACC,WAAW,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;EACNT,SAAS,CAAC,MAAM;IACdY,YAAY,CAACE,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAACR,MAAM,CAAC,CAAC;IACtDS,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEV,MAAM,CAAC;EAC5B,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAGZ,oBACEH,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBZ,MAAM,CAACiB,GAAG,CAAEC,KAAK,iBAChBrB,OAAA,CAACF,KAAK;QAAgBuB,KAAK,EAAEA,KAAM;QAAClB,MAAM,EAAEA,MAAO;QAACC,SAAS,EAAEA;MAAU,GAA7DiB,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuD,CAC5E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9CID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}