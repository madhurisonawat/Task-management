{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/Documents/Ramsoft/task-list/src/Components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskModal from './TaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  card,\n  listId,\n  handleDeleteCard,\n  handleEditCard,\n  setBoards,\n  boards\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState({\n    ...card\n  });\n  const handleSave = () => {\n    const updatedBoards = boards.map(b => {\n      if (b.id === listId) {\n        const updatedCards = b.cards.map(card => {\n          if (card.id === editedTask.id) {\n            return {\n              ...card,\n              text: editedTask.text\n            };\n          }\n          return card;\n        });\n        return {\n          ...b,\n          cards: updatedCards\n        };\n      }\n      return b;\n    });\n    setBoards(updatedBoards);\n    setIsEditing(false);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteCard(listId, card.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteClick,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsEditing(true),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: editedTask,\n      setTask: setEditedTask,\n      onSave: handleSave,\n      onCancel: () => setIsEditing(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"rdAuJI4iSxaFNWkHa2eM4WTV9Qo=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","TaskModal","jsxDEV","_jsxDEV","Card","card","listId","handleDeleteCard","handleEditCard","setBoards","boards","_s","isEditing","setIsEditing","editedTask","setEditedTask","handleSave","updatedBoards","map","b","id","updatedCards","cards","text","handleDeleteClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","task","setTask","onSave","onCancel","_c","$RefreshReg$"],"sources":["/home/madhuri/Documents/Ramsoft/task-list/src/Components/Card.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskModal from './TaskModal';\n\nconst Card = ({ card, listId, handleDeleteCard, handleEditCard,setBoards, boards }) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedTask, setEditedTask] = useState({ ...card });\nconst handleSave = () => {\n    const updatedBoards = boards.map((b) => {\n      if (b.id === listId) {\n        const updatedCards = b.cards.map((card) => {\n          if (card.id === editedTask.id) {\n            return {\n              ...card,\n              text: editedTask.text\n            };\n          }\n          return card; \n        });\n        return { ...b, cards: updatedCards };\n      }\n      return b; \n    });\n    setBoards(updatedBoards); \n    setIsEditing(false);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteCard(listId, card.id);\n  };\n\n\n  return (\n    <div className=\"card\">\n      <p>{card.text}</p>\n      <button onClick={handleDeleteClick}>Delete</button>\n      <button onClick={() => setIsEditing(true)}>Edit</button>\n      {isEditing && (\n        <TaskModal\n          task={editedTask}\n          setTask={setEditedTask}\n          onSave={handleSave}\n          onCancel={() => setIsEditing(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,gBAAgB;EAAEC,cAAc;EAACC,SAAS;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC;IAAE,GAAGK;EAAK,CAAC,CAAC;EAC7D,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAG,CAAEC,CAAC,IAAK;MACtC,IAAIA,CAAC,CAACC,EAAE,KAAKd,MAAM,EAAE;QACnB,MAAMe,YAAY,GAAGF,CAAC,CAACG,KAAK,CAACJ,GAAG,CAAEb,IAAI,IAAK;UACzC,IAAIA,IAAI,CAACe,EAAE,KAAKN,UAAU,CAACM,EAAE,EAAE;YAC7B,OAAO;cACL,GAAGf,IAAI;cACPkB,IAAI,EAAET,UAAU,CAACS;YACnB,CAAC;UACH;UACA,OAAOlB,IAAI;QACb,CAAC,CAAC;QACF,OAAO;UAAE,GAAGc,CAAC;UAAEG,KAAK,EAAED;QAAa,CAAC;MACtC;MACA,OAAOF,CAAC;IACV,CAAC,CAAC;IACFV,SAAS,CAACQ,aAAa,CAAC;IACxBJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9BjB,gBAAgB,CAACD,MAAM,EAAED,IAAI,CAACe,EAAE,CAAC;EACnC,CAAC;EAGD,oBACEjB,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBvB,OAAA;MAAAuB,QAAA,EAAIrB,IAAI,CAACkB;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3B,OAAA;MAAQ4B,OAAO,EAAEP,iBAAkB;MAAAE,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnD3B,OAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAAC,IAAI,CAAE;MAAAa,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvDlB,SAAS,iBACRT,OAAA,CAACF,SAAS;MACR+B,IAAI,EAAElB,UAAW;MACjBmB,OAAO,EAAElB,aAAc;MACvBmB,MAAM,EAAElB,UAAW;MACnBmB,QAAQ,EAAEA,CAAA,KAAMtB,YAAY,CAAC,KAAK;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CIP,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}