{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/Documents/Ramsoft/task-list/src/Components/List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport './style.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  list,\n  boards,\n  setBoards,\n  handleAddCard,\n  handleDeleteCard\n}) => {\n  _s();\n  const [newCardText, setNewCardText] = useState({\n    text: '',\n    description: '',\n    deadline: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCardText(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleAddClick = () => {\n    const currentNewCardText = {\n      text: newCardText.text,\n      description: newCardText.description,\n      deadline: newCardText.deadline\n    };\n    handleAddCard(list.id, currentNewCardText);\n    setNewCardText({\n      text: '',\n      description: '',\n      deadline: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [!list.cards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this) : list.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      listId: list.id,\n      handleDeleteCard: handleDeleteCard,\n      setBoards: setBoards,\n      boards: boards\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Enter list name\",\n        value: newCardText.text,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Enter description\",\n        value: newCardText.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: newCardText.deadline,\n        onChange: date => setNewCardText(prevTask => ({\n          ...prevTask,\n          deadline: date\n        })),\n        dateFormat: \"yyyy-MM-dd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": `add-task-button-${list.id}`,\n        onClick: handleAddClick,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"caMLvtZzK9shkU0H6KIEzZV2bUA=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","Card","DatePicker","jsxDEV","_jsxDEV","List","list","boards","setBoards","handleAddCard","handleDeleteCard","_s","newCardText","setNewCardText","text","description","deadline","handleInputChange","e","name","value","target","prevTask","handleAddClick","currentNewCardText","id","className","children","cards","length","fileName","_jsxFileName","lineNumber","columnNumber","map","card","listId","type","placeholder","onChange","selected","date","dateFormat","onClick","_c","$RefreshReg$"],"sources":["/home/madhuri/Documents/Ramsoft/task-list/src/Components/List.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from './Card';\nimport './style.css'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst List = ({ list, boards, setBoards, handleAddCard, handleDeleteCard }) => {\n  const [newCardText, setNewCardText] = useState({\n    text:'',\n    description:'',\n    deadline:''\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewCardText((prevTask) => ({\n      ...prevTask,\n      [name]: value,\n    }));\n  };\n  const handleAddClick = () => {\n    const currentNewCardText = {\n      text: newCardText.text,\n      description: newCardText.description,\n      deadline: newCardText.deadline,\n    };\n    handleAddCard(list.id, currentNewCardText);\n\n    setNewCardText({\n      text: '',\n      description: '',\n      deadline: '',\n    });\n  };\n  return (\n    <div className=\"list\">\n        {!list.cards.length>0?\n      <div>No task</div>:\n      list.cards.map((card) => (\n        <Card key={card.id} card={card} listId={list.id} handleDeleteCard={handleDeleteCard}setBoards={setBoards}boards={boards} />\n      ))\n}\n      <div className=\"new-card\">\n        <input type=\"text\" name='text' placeholder={\"Enter list name\"}value={newCardText.text} onChange={handleInputChange} />\n        <input type=\"text\" name='description'placeholder={\"Enter description\"}value={newCardText.description} onChange={handleInputChange} />\n        {/* <input type=\"text\" name='deadline'placeholder={\"Enter deadline\"}value={newCardText.deadline} onChange={handleInputChange} /> */}\n        <DatePicker\n            selected={newCardText.deadline}\n            onChange={(date) => setNewCardText((prevTask) => ({ ...prevTask, deadline: date }))}\n            dateFormat=\"yyyy-MM-dd\"\n          />\n        <button data-testid={`add-task-button-${list.id}`} onClick={handleAddClick}>Add Task</button>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}