{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/Documents/Ramsoft/Task-management/src/Components/List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport './style.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { FaCalendarAlt } from 'react-icons/fa';\nimport { format } from 'date-fns';\nimport { forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomDatePickerInput = /*#__PURE__*/forwardRef(_c = ({\n  value,\n  onClick\n}, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"custom-datepicker-input\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    ref: ref,\n    type: \"text\",\n    value: value,\n    onClick: onClick,\n    readOnly: true,\n    placeholder: \"Select Deadline\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n    \"data-testid\": \"calendar-icon\",\n    className: \"calendar-icon\",\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this));\n_c2 = CustomDatePickerInput;\nconst List = ({\n  list,\n  boards,\n  setBoards,\n  handleAddCard,\n  handleDeleteCard\n}) => {\n  _s();\n  const [newCardText, setNewCardText] = useState({\n    text: '',\n    description: '',\n    deadline: ''\n  });\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCardText(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleAddClick = () => {\n    let formattedDeadline = '';\n    if (selectedDate) {\n      formattedDeadline = format(selectedDate, 'yyyy-MM-dd');\n    }\n    const currentNewCardText = {\n      text: newCardText.text,\n      description: newCardText.description,\n      deadline: formattedDeadline\n    };\n    handleAddCard(list.id, currentNewCardText);\n    setNewCardText({\n      text: '',\n      description: '',\n      deadline: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [!list.cards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this) : list.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      listId: list.id,\n      handleDeleteCard: handleDeleteCard,\n      setBoards: setBoards,\n      boards: boards\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Enter task name\",\n        value: newCardText.text,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Enter description\",\n        value: newCardText.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: date => setSelectedDate(date),\n        customInput: /*#__PURE__*/_jsxDEV(CustomDatePickerInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this),\n        dateFormat: \"yyyy-MM-dd\",\n        minDate: new Date()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": `add-task-button-${list.id}`,\n        onClick: handleAddClick,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"SlqB+ZhKkpaeWfnlgDuDAYX3kkg=\");\n_c3 = List;\nexport default List;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CustomDatePickerInput$forwardRef\");\n$RefreshReg$(_c2, \"CustomDatePickerInput\");\n$RefreshReg$(_c3, \"List\");","map":{"version":3,"names":["React","useState","Card","DatePicker","FaCalendarAlt","format","forwardRef","jsxDEV","_jsxDEV","CustomDatePickerInput","_c","value","onClick","ref","className","children","type","readOnly","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c2","List","list","boards","setBoards","handleAddCard","handleDeleteCard","_s","newCardText","setNewCardText","text","description","deadline","selectedDate","setSelectedDate","handleInputChange","e","name","target","prevTask","handleAddClick","formattedDeadline","currentNewCardText","id","cards","length","map","card","listId","onChange","selected","date","customInput","dateFormat","minDate","Date","_c3","$RefreshReg$"],"sources":["/home/madhuri/Documents/Ramsoft/Task-management/src/Components/List.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from './Card';\nimport './style.css'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { FaCalendarAlt } from 'react-icons/fa';\nimport {format} from 'date-fns'\nimport { forwardRef } from 'react';\n\nconst CustomDatePickerInput = forwardRef(({ value, onClick }, ref) => (\n  <div className=\"custom-datepicker-input\">\n    <input\n       ref={ref}\n      type=\"text\"\n      value={value}\n      onClick={onClick}\n      readOnly\n      placeholder=\"Select Deadline\"\n    />\n    <FaCalendarAlt data-testid='calendar-icon'className=\"calendar-icon\" onClick={onClick} />\n  </div>\n));\n\nconst List = ({ list, boards, setBoards, handleAddCard, handleDeleteCard }) => {\n  const [newCardText, setNewCardText] = useState({\n    text:'',\n    description:'',\n    deadline:''\n  });\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewCardText((prevTask) => ({\n      ...prevTask,\n      [name]: value,\n    }));\n  };\n  const handleAddClick = () => {\n    let formattedDeadline = '';\n    if (selectedDate) {\n      formattedDeadline = format(selectedDate, 'yyyy-MM-dd');\n    }\n    const currentNewCardText = {\n      text: newCardText.text,\n      description: newCardText.description,\n      deadline: formattedDeadline\n    };\n    handleAddCard(list.id, currentNewCardText);\n\n    setNewCardText({\n      text: '',\n      description: '',\n      deadline: '',\n    });\n  };\n  return (\n    <div className=\"list\">\n        {!list.cards.length>0?\n      <div>No task</div>:\n      list.cards.map((card) => (\n        <Card key={card.id} card={card} listId={list.id} handleDeleteCard={handleDeleteCard}setBoards={setBoards}boards={boards} />\n      ))\n}\n      <div className=\"new-card\">\n        <input type=\"text\" name='text' placeholder={\"Enter task name\"}value={newCardText.text} onChange={handleInputChange} />\n        <input type=\"text\" name='description'placeholder={\"Enter description\"}value={newCardText.description} onChange={handleInputChange} />\n        <DatePicker\n      selected={selectedDate}\n      onChange={(date) => setSelectedDate(date)}\n      customInput={<CustomDatePickerInput />}\n      dateFormat=\"yyyy-MM-dd\"\n      minDate={new Date()}\n    />\n        <button data-testid={`add-task-button-${list.id}`} onClick={handleAddClick}>Add Task</button>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}