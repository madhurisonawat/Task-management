{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/Documents/Ramsoft/task-list/src/Components/Board.js\";\nimport React from 'react';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  board,\n  boards,\n  setBoards\n}) => {\n  const handleAddCard = (listId, text) => {\n    const updatedBoards = boards.map(b => {\n      if (b.id === listId) {\n        return {\n          ...b,\n          cards: [...b.cards, {\n            id: uuid(),\n            ...text\n          }]\n        };\n      }\n      return b;\n    });\n    setBoards(updatedBoards);\n    localStorage.setItem('boards', JSON.stringify(updatedBoards));\n  };\n  const handleDeleteCard = (listId, cardId) => {\n    const updatedBoards = boards.map(b => {\n      if (b.id === listId) {\n        return {\n          ...b,\n          cards: b.cards.filter(card => card.id !== cardId)\n        };\n      }\n      return b;\n    });\n    setBoards(updatedBoards);\n    localStorage.setItem('boards', JSON.stringify(updatedBoards));\n  };\n  const handleEditCard = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: board.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      list: board,\n      boards: boards,\n      setBoards: setBoards,\n      handleAddCard: handleAddCard,\n      handleDeleteCard: handleDeleteCard,\n      handleEditCard: handleEditCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","List","v4","uuid","jsxDEV","_jsxDEV","Board","board","boards","setBoards","handleAddCard","listId","text","updatedBoards","map","b","id","cards","localStorage","setItem","JSON","stringify","handleDeleteCard","cardId","filter","card","handleEditCard","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","list","_c","$RefreshReg$"],"sources":["/home/madhuri/Documents/Ramsoft/task-list/src/Components/Board.js"],"sourcesContent":["import React from 'react';\nimport List from './List';\nimport { v4 as uuid } from 'uuid';\n\nconst Board = ({ board, boards, setBoards }) => {\n  const handleAddCard = (listId, text) => {\n    const updatedBoards = boards.map((b) => {\n      if (b.id === listId) {\n        return {\n          ...b,\n          cards: [...b.cards, { id: uuid(), ...text }],\n        };\n      }\n      return b;\n    });\n    setBoards(updatedBoards);\n    localStorage.setItem('boards', JSON.stringify(updatedBoards));\n  };\n\n  const handleDeleteCard = (listId, cardId) => {\n    const updatedBoards = boards.map((b) => {\n      if (b.id === listId) {\n        return {\n          ...b,\n          cards: b.cards.filter((card) => card.id !== cardId),\n        };\n      }\n      return b;\n    });\n    setBoards(updatedBoards);\n    localStorage.setItem('boards', JSON.stringify(updatedBoards));\n  };\n  const handleEditCard=()=>{\n\n  }\n  return (\n    <div className=\"board\">\n      <h2>{board.title}</h2>\n      <List\n        list={board}\n        boards={boards}\n        setBoards={setBoards}\n        handleAddCard={handleAddCard}\n        handleDeleteCard={handleDeleteCard}\n        handleEditCard={handleEditCard}\n      />\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAC9C,MAAMC,aAAa,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;IACtC,MAAMC,aAAa,GAAGL,MAAM,CAACM,GAAG,CAAEC,CAAC,IAAK;MACtC,IAAIA,CAAC,CAACC,EAAE,KAAKL,MAAM,EAAE;QACnB,OAAO;UACL,GAAGI,CAAC;UACJE,KAAK,EAAE,CAAC,GAAGF,CAAC,CAACE,KAAK,EAAE;YAAED,EAAE,EAAEb,IAAI,CAAC,CAAC;YAAE,GAAGS;UAAK,CAAC;QAC7C,CAAC;MACH;MACA,OAAOG,CAAC;IACV,CAAC,CAAC;IACFN,SAAS,CAACI,aAAa,CAAC;IACxBK,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACR,aAAa,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAACX,MAAM,EAAEY,MAAM,KAAK;IAC3C,MAAMV,aAAa,GAAGL,MAAM,CAACM,GAAG,CAAEC,CAAC,IAAK;MACtC,IAAIA,CAAC,CAACC,EAAE,KAAKL,MAAM,EAAE;QACnB,OAAO;UACL,GAAGI,CAAC;UACJE,KAAK,EAAEF,CAAC,CAACE,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKO,MAAM;QACpD,CAAC;MACH;MACA,OAAOR,CAAC;IACV,CAAC,CAAC;IACFN,SAAS,CAACI,aAAa,CAAC;IACxBK,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACR,aAAa,CAAC,CAAC;EAC/D,CAAC;EACD,MAAMa,cAAc,GAACA,CAAA,KAAI,CAEzB,CAAC;EACD,oBACErB,OAAA;IAAKsB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBvB,OAAA;MAAAuB,QAAA,EAAKrB,KAAK,CAACsB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtB5B,OAAA,CAACJ,IAAI;MACHiC,IAAI,EAAE3B,KAAM;MACZC,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBC,aAAa,EAAEA,aAAc;MAC7BY,gBAAgB,EAAEA,gBAAiB;MACnCI,cAAc,EAAEA;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACE,EAAA,GA5CI7B,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}