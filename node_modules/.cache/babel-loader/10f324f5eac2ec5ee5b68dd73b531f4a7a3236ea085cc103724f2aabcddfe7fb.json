{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/Documents/Ramsoft/task-list/src/Components/List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport './style.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { FaCalendarAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomDatePickerInput = ({\n  value,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"custom-datepicker-input\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: value,\n    onClick: onClick,\n    readOnly: true,\n    placeholder: \"Select Deadline\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n    className: \"calendar-icon\",\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n_c = CustomDatePickerInput;\nconst List = ({\n  list,\n  boards,\n  setBoards,\n  handleAddCard,\n  handleDeleteCard\n}) => {\n  _s();\n  const [newCardText, setNewCardText] = useState({\n    text: '',\n    description: '',\n    deadline: ''\n  });\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCardText(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleAddClick = () => {\n    const currentNewCardText = {\n      text: newCardText.text,\n      description: newCardText.description,\n      deadline: newCardText.deadline\n    };\n    handleAddCard(list.id, currentNewCardText);\n    setNewCardText({\n      text: '',\n      description: '',\n      deadline: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [!list.cards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this) : list.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      listId: list.id,\n      handleDeleteCard: handleDeleteCard,\n      setBoards: setBoards,\n      boards: boards\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Enter task name\",\n        value: newCardText.text,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Enter description\",\n        value: newCardText.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: date => setSelectedDate(date),\n        customInput: /*#__PURE__*/_jsxDEV(CustomDatePickerInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this),\n        dateFormat: \"yyyy-MM-dd\",\n        minDate: new Date()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": `add-task-button-${list.id}`,\n        onClick: handleAddClick,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"SlqB+ZhKkpaeWfnlgDuDAYX3kkg=\");\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomDatePickerInput\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["React","useState","Card","DatePicker","FaCalendarAlt","jsxDEV","_jsxDEV","CustomDatePickerInput","value","onClick","className","children","type","readOnly","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","List","list","boards","setBoards","handleAddCard","handleDeleteCard","_s","newCardText","setNewCardText","text","description","deadline","selectedDate","setSelectedDate","handleInputChange","e","name","target","prevTask","handleAddClick","currentNewCardText","id","cards","length","map","card","listId","onChange","selected","date","customInput","dateFormat","minDate","Date","_c2","$RefreshReg$"],"sources":["/home/madhuri/Documents/Ramsoft/task-list/src/Components/List.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from './Card';\nimport './style.css'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { FaCalendarAlt } from 'react-icons/fa';\n\nconst CustomDatePickerInput = ({ value, onClick }) => (\n  <div className=\"custom-datepicker-input\">\n    <input\n      type=\"text\"\n      value={value}\n      onClick={onClick}\n      readOnly\n      placeholder=\"Select Deadline\"\n    />\n    <FaCalendarAlt className=\"calendar-icon\" onClick={onClick} />\n  </div>\n);\n\nconst List = ({ list, boards, setBoards, handleAddCard, handleDeleteCard }) => {\n  const [newCardText, setNewCardText] = useState({\n    text:'',\n    description:'',\n    deadline:''\n  });\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewCardText((prevTask) => ({\n      ...prevTask,\n      [name]: value,\n    }));\n  };\n  const handleAddClick = () => {\n    const currentNewCardText = {\n      text: newCardText.text,\n      description: newCardText.description,\n      deadline: newCardText.deadline,\n    };\n    handleAddCard(list.id, currentNewCardText);\n\n    setNewCardText({\n      text: '',\n      description: '',\n      deadline: '',\n    });\n  };\n  return (\n    <div className=\"list\">\n        {!list.cards.length>0?\n      <div>No task</div>:\n      list.cards.map((card) => (\n        <Card key={card.id} card={card} listId={list.id} handleDeleteCard={handleDeleteCard}setBoards={setBoards}boards={boards} />\n      ))\n}\n      <div className=\"new-card\">\n        <input type=\"text\" name='text' placeholder={\"Enter task name\"}value={newCardText.text} onChange={handleInputChange} />\n        <input type=\"text\" name='description'placeholder={\"Enter description\"}value={newCardText.description} onChange={handleInputChange} />\n        <DatePicker\n      selected={selectedDate}\n      onChange={(date) => setSelectedDate(date)}\n      customInput={<CustomDatePickerInput />}\n      dateFormat=\"yyyy-MM-dd\"\n      minDate={new Date()}\n    />\n        <button data-testid={`add-task-button-${list.id}`} onClick={handleAddClick}>Add Task</button>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}