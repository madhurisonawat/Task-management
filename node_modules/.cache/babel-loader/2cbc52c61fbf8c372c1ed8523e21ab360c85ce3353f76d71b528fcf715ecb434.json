{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/Documents/Ramsoft/task-list/src/Components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskModal from './TaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  card,\n  listId,\n  handleDeleteCard,\n  handleEditCard,\n  setBoards,\n  boards\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState({\n    ...card\n  });\n  console.log('hey', {\n    card,\n    listId,\n    boards\n  });\n  const handleSave = () => {\n    const updatedBoards = boards.map(b => {\n      if (b.id === editedTask.id) {\n        return {\n          ...b,\n          cards: [...editedTask]\n        };\n      }\n      return b;\n    });\n    setBoards(updatedBoards);\n    setIsEditing(false);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteCard(listId, card.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteClick,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsEditing(true),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: editedTask,\n      setTask: setEditedTask,\n      onSave: handleSave,\n      onCancel: () => setIsEditing(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"rdAuJI4iSxaFNWkHa2eM4WTV9Qo=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","TaskModal","jsxDEV","_jsxDEV","Card","card","listId","handleDeleteCard","handleEditCard","setBoards","boards","_s","isEditing","setIsEditing","editedTask","setEditedTask","console","log","handleSave","updatedBoards","map","b","id","cards","handleDeleteClick","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","task","setTask","onSave","onCancel","_c","$RefreshReg$"],"sources":["/home/madhuri/Documents/Ramsoft/task-list/src/Components/Card.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskModal from './TaskModal';\n\nconst Card = ({ card, listId, handleDeleteCard, handleEditCard,setBoards, boards }) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedTask, setEditedTask] = useState({ ...card });\nconsole.log('hey',{card,listId, boards})\n    const handleSave = () => {\n        const updatedBoards = boards.map((b) => {\n            if (b.id === editedTask.id) {\n              return {\n                ...b,\n                cards: [...editedTask],\n              };\n            }\n            return b;\n          });\n          setBoards(updatedBoards);\n        setIsEditing(false);\n    };\n  const handleDeleteClick = () => {\n    handleDeleteCard(listId, card.id);\n  };\n\n\n  return (\n    <div className=\"card\">\n      <p>{card.text}</p>\n      <button onClick={handleDeleteClick}>Delete</button>\n      <button onClick={() => setIsEditing(true)}>Edit</button>\n      {isEditing && (\n        <TaskModal\n          task={editedTask}\n          setTask={setEditedTask}\n          onSave={handleSave}\n          onCancel={() => setIsEditing(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,gBAAgB;EAAEC,cAAc;EAACC,SAAS;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC;IAAE,GAAGK;EAAK,CAAC,CAAC;EAC7DW,OAAO,CAACC,GAAG,CAAC,KAAK,EAAC;IAACZ,IAAI;IAACC,MAAM;IAAEI;EAAM,CAAC,CAAC;EACpC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,aAAa,GAAGT,MAAM,CAACU,GAAG,CAAEC,CAAC,IAAK;MACpC,IAAIA,CAAC,CAACC,EAAE,KAAKR,UAAU,CAACQ,EAAE,EAAE;QAC1B,OAAO;UACL,GAAGD,CAAC;UACJE,KAAK,EAAE,CAAC,GAAGT,UAAU;QACvB,CAAC;MACH;MACA,OAAOO,CAAC;IACV,CAAC,CAAC;IACFZ,SAAS,CAACU,aAAa,CAAC;IAC1BN,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EACH,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9BjB,gBAAgB,CAACD,MAAM,EAAED,IAAI,CAACiB,EAAE,CAAC;EACnC,CAAC;EAGD,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBvB,OAAA;MAAAuB,QAAA,EAAIrB,IAAI,CAACsB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB5B,OAAA;MAAQ6B,OAAO,EAAER,iBAAkB;MAAAE,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnD5B,OAAA;MAAQ6B,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,IAAI,CAAE;MAAAa,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvDnB,SAAS,iBACRT,OAAA,CAACF,SAAS;MACRgC,IAAI,EAAEnB,UAAW;MACjBoB,OAAO,EAAEnB,aAAc;MACvBoB,MAAM,EAAEjB,UAAW;MACnBkB,QAAQ,EAAEA,CAAA,KAAMvB,YAAY,CAAC,KAAK;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CArCIP,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}